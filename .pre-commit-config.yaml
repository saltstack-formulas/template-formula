# -*- coding: utf-8 -*-
# vim: ft=yaml
---
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
ci:
  autofix_commit_msg: |
    ci(pre-commit.ci): apply auto fixes from pre-commit.com hooks

    For more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: |
    ci(pre-commit.ci): perform `pre-commit` autoupdate
  autoupdate_schedule: quarterly
  skip: []
  submodules: false
default_install_hook_types: [commit-msg, pre-commit]
default_stages: [pre-commit]
repos:
  - repo: https://github.com/dafyddj/commitlint-pre-commit-hook
    rev: v2.3.0
    hooks:
      - id: commitlint
        name: Check commit message using commitlint
        description: Lint commit message against @commitlint/config-conventional rules
        stages: [commit-msg]
        additional_dependencies: ['@commitlint/config-conventional@17.1.0']
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
        name: Check for added large files
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.30.0
    hooks:
      - id: check-github-workflows
        name: Check GitHub workflows with check-jsonschema
        args: [--verbose]
      - id: check-gitlab-ci
        name: Check Gitlab CI config with check-jsonschema
        args: [--verbose]
      - id: check-renovate
        name: Check Renovate config with check-jsonschema
        additional_dependencies: [json5==0.9.14]
        args: [--verbose]
  - repo: https://github.com/rubocop-hq/rubocop
    rev: v1.69.0
    hooks:
      - id: rubocop
        name: Check Ruby files with rubocop
        args: [--debug]
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        name: Check shell scripts with shellcheck
        files: ^.*\.(sh|bash|ksh)$
        types: []
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: Check YAML syntax with yamllint
        args: [--strict]
        types: [file]
        # Files to include
        # 1. Obvious YAML files
        # 2. `pillar.example` and similar files
        # 3. SLS files under directory `test/` which are pillar files
        # Files to exclude
        # 1. SLS files under directory `test/` which are state files
        # 2. `kitchen.vagrant.yml`, which contains Embedded Ruby (ERB) template syntax
        # 3. YAML files heavily reliant on Jinja
        # 4. `.copier-answers.yml` and related files which are auto-generated
        files: |
          (?x)^(
                .*\.yaml|
                .*\.yml|
                \.salt-lint|
                \.yamllint|
                .*\.example|
                test/.*\.sls
          )$
        exclude: |
          (?x)^(
                \.copier-answers(\..+)?\.ya?ml|
                kitchen.vagrant.yml|
                test/.*/states/.*\.sls
          )$
  - repo: https://github.com/warpnet/salt-lint
    rev: v0.9.2
    hooks:
      - id: salt-lint
        name: Check Salt files using salt-lint
        files: ^.*\.(sls|jinja|j2|tmpl|tst)$
  - repo: https://github.com/myint/rstcheck
    rev: v6.2.4
    hooks:
      - id: rstcheck
        name: Check reST files using rstcheck
        exclude: docs/CHANGELOG.rst
        additional_dependencies: [sphinx==7.2.6]
  - repo: https://github.com/saltstack-formulas/mirrors-rst-lint
    rev: v1.4.0
    hooks:
      - id: rst-lint
        name: Check reST files using rst-lint
        exclude: |
            (?x)^(
                docs/CHANGELOG.rst|
                docs/TOFS_pattern.rst|
                docs/CONTRIBUTING_DOCS.rst|
                docs/index.rst|
            )$
        additional_dependencies: [pygments==2.16.1]
